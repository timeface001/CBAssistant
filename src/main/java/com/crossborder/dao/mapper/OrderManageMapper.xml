<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crossborder.dao.OrderManageDao">
    <insert id="insertOrders" parameterType="com.crossborder.entity.LocalOrder">
        MERGE INTO T_ORDER t1
        USING (SELECT #{amazonOrderId} orderId FROM dual) t2
        ON (t1.AMAZONORDERID = t2.orderId)
        WHEN matched THEN
        UPDATE set t1.ORDERSTATUS = #{orderStatus,jdbcType=VARCHAR},
        t1.LASTUPDATEDATE = #{lastUpdateDate,jdbcType=VARCHAR},
        t1.COMMISSION = #{commission,jdbcType=DOUBLE}
        WHEN not matched THEN
        INSERT
        (ID,
        AMAZONORDERID,
        SELLERORDERID,
        ORDERSTATUS,
        PURCHASEDATE,
        LASTUPDATEDATE,
        FULFILLMENTCHANNEL,
        ORDERTOTAL,
        NUMBEROFITEMSSHIPPED,
        NUMBEROFITEMSUNSHIPPED,
        PAYMENTMETHOD,
        MARKETPLACEID,
        BUYERNAME,
        ORDERTYPE,
        RUNNINGTIME,
        SALESMAN,
        SALESCOMPANY,
        SALESSOURCE,
        BUYERCOUNTRY,
        TRANSPORTCOMPANY,
        INTLTRACKNUM,
        CURRENCYCODE,
        LOCALSTATUS,
        SHIPPINGPRICE,
        COMMISSION)
        VALUES
        (seq_order_id.nextval,
        #{amazonOrderId,jdbcType=VARCHAR},
        #{sellerOrderId,jdbcType=VARCHAR},
        #{orderStatus,jdbcType=VARCHAR},
        #{purchaseDate,jdbcType=VARCHAR},
        #{lastUpdateDate,jdbcType=VARCHAR},
        #{fulfillmentChannel,jdbcType=VARCHAR},
        #{orderTotal,jdbcType=DOUBLE},
        #{numberOfItemsShipped,jdbcType=INTEGER},
        #{numberOfItemsUnshipped,jdbcType=INTEGER},
        #{paymentMethod,jdbcType=VARCHAR},
        #{marketplaceId,jdbcType=VARCHAR},
        #{buyerName,jdbcType=VARCHAR},
        #{orderType,jdbcType=VARCHAR},
        #{runningTime,jdbcType=VARCHAR},
        #{salesMan,jdbcType=VARCHAR},
        #{salesCompany,jdbcType=VARCHAR},
        #{salesSource,jdbcType=VARCHAR},
        #{buyerCounty,jdbcType=VARCHAR},
        #{transportCompany,jdbcType=VARCHAR},
        #{intlTrackNum,jdbcType=VARCHAR},
        #{currencyCode,jdbcType=VARCHAR},
        #{localStatus,jdbcType=VARCHAR},
        #{shippingPrice,jdbcType=DOUBLE},
        #{commission,jdbcType=DOUBLE})
    </insert>
    <insert id="insertOrderItem" parameterType="com.crossborder.entity.LocalOrderItem">
        MERGE INTO T_ORDER_ITEM t1
        USING (SELECT #{orderItemId} orderItemId FROM dual) t2
        ON (t1.ORDERITEMID = t2.orderItemId)
        WHEN matched THEN
        UPDATE set
        t1.ITEMPRICE = #{itemPrice,jdbcType=VARCHAR},
        t1.QUANTITYSHIPPED = #{quantityShipped,jdbcType=VARCHAR},
        t1.SMALLIMAGE = #{smallImage,jdbcType=VARCHAR}
        WHEN not matched THEN
        INSERT (AMAZONORDERID,
        COST,
        SELLERSKU,
        ORDERITEMID,
        TITLE,
        STATUS,
        ASIN,
        QUANTITYSHIPPED,
        ITEMPRICE,
        SHIPPINGPRICE,
        REFUNDMENT,
        PURCHASENUM,
        TRACKNUM,
        ACTUALWEIGHT,
        PAYWEIGHT,
        VOLUMEWEIGHT,
        CURRENCYCODE,
        SMALLIMAGE,
        ITEMPRICERMB,
        SHIPPINGPRICERMB)
        VALUES (#{amazonOrderId,jdbcType=VARCHAR},
        #{cost,jdbcType=VARCHAR},
        #{sellerSKU,jdbcType=VARCHAR},
        #{orderItemId,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR},
        #{status,jdbcType=VARCHAR},
        #{asin,jdbcType=VARCHAR},
        #{quantityShipped,jdbcType=INTEGER},
        #{itemPrice,jdbcType=DOUBLE},
        #{shippingPrice,jdbcType=DOUBLE},
        #{refundment,jdbcType=DOUBLE},
        #{purchaseNum,jdbcType=VARCHAR},
        #{trackNum,jdbcType=VARCHAR},
        #{actualWeight,jdbcType=DOUBLE},
        #{payWeight,jdbcType=DOUBLE},
        #{volumeWeight,jdbcType=DOUBLE},
        #{currencyCode,jdbcType=VARCHAR},
        #{smallImage,jdbcType=VARCHAR},
        #{itemPriceRMB,jdbcType=VARCHAR},
        #{shippingPriceRMB,jdbcType=VARCHAR})
    </insert>
    <insert id="insertAddress" parameterType="com.crossborder.entity.AddressInfo">
        MERGE INTO T_ADDRESS t1
        USING (SELECT #{amazonOrderId} amazonOrderId FROM dual) t2
        ON (t1.AMAZONORDERID = t2.amazonOrderId)
        WHEN matched THEN
        UPDATE set
        t1.CREATE_USER = #{createUser,jdbcType=VARCHAR}
        WHEN not matched THEN
        INSERT(
        AMAZONORDERID,
        USERNAME,
        COMPANY,
        PHONE,
        COUNTRYCODE,
        POSTALCODE,
        CITY,
        STATEORREGION,
        ADDRESSLINE1,
        ADDRESSLINE2,
        ADDRESSLINE3,
        CREATE_USER)
        VALUES (
        #{amazonOrderId,jdbcType=VARCHAR},
        #{name,jdbcType=VARCHAR},
        #{company,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR},
        #{countryCode,jdbcType=VARCHAR},
        #{postalCode,jdbcType=VARCHAR},
        #{city,jdbcType=VARCHAR},
        #{stateOrRegion,jdbcType=VARCHAR},
        #{addressLine1,jdbcType=VARCHAR},
        #{addressLine2,jdbcType=VARCHAR},
        #{addressLine3,jdbcType=VARCHAR},
        #{createUser,jdbcType=VARCHAR})
    </insert>
    <select id="selectAddress" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT * FROM T_ADDRESS
        WHERE AMAZONORDERID = #{amazonOrderId,jdbcType=VARCHAR}
    </select>
    <select id="selectLocalOrder" resultType="java.util.Map" parameterType="java.util.Map">
        select t1.id,
        t1.amazonorderid,
        t1.salesman,
        t1.salescompany,
        t6.user_name,
        t5.shop_name,
        t1.runningtime,
        t1.intltracknum,
        t1.purchaseDate,
        t1.FULFILLMENTCHANNEL,
        t7.name transportCompany,
        t1.shippingPrice,
        t1.localstatus,
        t1.remark,
        t3.name buyercountry,
        t2.smallImage,
        t4.company_name,
        t1.paymentmethod,
        wm_concat(t2.SELLERSKU) sku,
        wm_concat(t2.ASIN) asin,
        trunc(sum(t2.itempricermb + t2.shippingPricermb + t1.commission),2) itemprice,
        trunc(sum(t2.cost),2) cost,
        trunc(sum(t2.refundment),2) refundment,
        trunc(sum(t2.itempricermb - t2.cost - t2.refundment - t1.shippingPrice + t2.shippingPricermb + t1.commission),2)
        profit
        from T_ORDER t1
        left join t_order_item t2
        on t2.amazonorderid = t1.amazonorderid
        left join t_country t3
        on t3.id = t1.buyercountry
        left join t_user_company t4
        on t4.company_id = t1.salescompany
        left join (select distinct merchant_id, shop_name from t_shop) t5
        on t5.merchant_id = t1.salessource
        left join t_user_info t6
        on t6.user_id= t1.salesman
        left join t_transport_company t7
        on t7.id = t1.transportcompany
        WHERE 1=1
        <if test="amazonOrderId !=null and amazonOrderId !=''">
            AND t1.AMAZONORDERID = #{amazonOrderId,jdbcType=VARCHAR}
        </if>
        <if test="salesMan !=null and salesMan !=''">
            AND t1.SALESMAN = #{salesMan,jdbcType=VARCHAR}
        </if>
        <if test="salesCompany !=null and salesCompany !=''">
            AND t1.SALESCOMPANY = #{salesCompany,jdbcType=VARCHAR}
        </if>
        <if test="salesSource !=null and salesSource !=''">
            AND t1.SALESSOURCE = #{salesSource,jdbcType=VARCHAR}
        </if>
        <if test="buyerCounty !=null and buyerCounty !=''">
            AND t1.BUYERCOUNTRY = #{buyerCounty,jdbcType=VARCHAR}
        </if>
        <if test="intlTrackNum !=null and intlTrackNum !=''">
            AND t1.INTLTRACKNUM = #{intlTrackNum,jdbcType=VARCHAR}
        </if>
        <if test="transportCompany !=null and transportCompany !=''">
            AND t1.TRANSPORTCOMPANY = #{transportCompany,jdbcType=VARCHAR}
        </if>
        <if test="localStatus !=null and localStatus !=''">
            AND t1.LOCALSTATUS = #{localStatus,jdbcType=VARCHAR}
        </if>
        <if test="logmin !=null and logmin != ''">
            AND t1.PURCHASEDATE <![CDATA[>=]]> #{logmin,jdbcType=VARCHAR}
        </if>
        <if test="logmax !=null and logmax != ''">
            AND t1.PURCHASEDATE  <![CDATA[<=]]> #{logmax,jdbcType=VARCHAR}
        </if>
        <if test="sku !=null and sku != ''">
            AND t2.SELLERSKU LIKE '%${sku}%'
        </if>
        <if test="trackNum !=null and trackNum != ''">
            AND t2.TRACKNUM LIKE '%${trackNum}%'
        </if>
        group by t1.id,
        t1.amazonorderid,
        t1.salesman,
        t1.salescompany,
        t6.user_name,
        t5.shop_name,
        t1.runningtime,
        t1.intltracknum,
        t1.purchaseDate,
        t1.FULFILLMENTCHANNEL,
        t7.name,
        t1.shippingPrice,
        t1.localstatus,
        t1.remark,
        t3.name,
        t2.smallImage,
        t3.exrate,
        t4.company_name,
        t1.paymentmethod
        ORDER BY t1.purchaseDate DESC
    </select>

    <select id="selectLocalOrderItem" resultType="java.util.Map" parameterType="java.lang.String">
        SELECT * from T_ORDER_ITEM
        WHERE AMAZONORDERID = #{amazonOrderId,jdbcType=VARCHAR}
        <if test="orderItemId !=null and orderItemId != ''">
            AND ORDERITEMID = #{orderItemId,jdbcType=VARCHAR}
        </if>
    </select>
    <update id="updateOrder" parameterType="java.util.Map">
        UPDATE T_ORDER
        set
        <if test="status !=null and status !=''">
            LOCALSTATUS = #{status,jdbcType=VARCHAR}
        </if>
        <if test="intlTrackNum !=null and intlTrackNum !=''">
            ,INTLTRACKNUM = #{intlTrackNum,jdbcType=VARCHAR}
        </if>
        <if test="shippingPrice !=null and shippingPrice !=''">
            ,SHIPPINGPRICE = #{shippingPrice,jdbcType=VARCHAR}
        </if>
        <if test="transportCompany !=null and transportCompany !=''">
            ,TRANSPORTCOMPANY = #{transportCompany,jdbcType=VARCHAR}
        </if>
        WHERE AMAZONORDERID = #{amazonOrderId,jdbcType=VARCHAR}
    </update>
    <update id="updateOrderShipping" parameterType="java.util.Map">
        UPDATE T_ORDER
        set
        SHIPPINGPRICE = #{shippingPrice,jdbcType=VARCHAR}
        WHERE AMAZONORDERID = #{amazonOrderId,jdbcType=VARCHAR}
    </update>
    <update id="updateOrderItem">
        UPDATE T_ORDER_ITEM
        set STATUS = #{status,jdbcType=VARCHAR}
        <if test="cost !=null and cost !=''">
            ,COST = #{cost,jdbcType=VARCHAR}
        </if>
        <if test="refundment !=null and refundment !=''">
            ,REFUNDMENT = #{refundment,jdbcType=VARCHAR}
        </if>
        <if test="trackNum !=null and trackNum !=''">
            ,TRACKNUM = #{trackNum,jdbcType=VARCHAR}
        </if>
        <if test="purchaseNum !=null and purchaseNum !=''">
            ,PURCHASENUM = #{purchaseNum,jdbcType=VARCHAR}
        </if>
        WHERE AMAZONORDERID = #{amazonOrderId,jdbcType=VARCHAR}
        <if test="orderItemId !=null and orderItemId !=''">
            AND ORDERITEMID = #{orderItemId,jdbcType=VARCHAR}
        </if>
    </update>
    <update id="updateOrderRemark" parameterType="java.util.Map">
         UPDATE T_ORDER
         set REMARK = #{remark,jdbcType=VARCHAR}
         WHERE AMAZONORDERID = #{amazonOrderId,jdbcType=VARCHAR}
    </update>
    <insert id="inserOperationLog" parameterType="java.util.Map">
        INSERT INTO T_OPERATION_LOG
        (ID,
        AMAZONORDERID,
        OPERATION_TYPE,
        OPERATION_INFO,
        OPERATION_USER,
        OPERATION_TIME)
        VALUES
        (seq_operation_id.nextval,
        #{amazonOrderId,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR},
        #{info,jdbcType=VARCHAR},
        #{user,jdbcType=VARCHAR},
        #{time,jdbcType=VARCHAR})
    </insert>
    <select id="selectOperationLog" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT t1.*,t2.USER_NAME FROM T_OPERATION_LOG t1
        LEFT JOIN T_USER_INFO t2
        ON t1.OPERATION_USER = t2.USER_ID
        WHERE AMAZONORDERID = #{amazonOrderId,jdbcType=VARCHAR}
        ORDER BY OPERATION_TIME DESC
    </select>
    <select id="selectFees" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        nvl(trunc(sum(t2.itempricermb + t2.shippingPricermb + t1.commission),2),0) itemprice,
        nvl(trunc(sum(t1.shippingPrice),2),0) shippingPrice,
        nvl(trunc(sum(t2.cost),2),0) cost,
        nvl(trunc(sum(t2.refundment),2),0) refundment,
        nvl(trunc(sum(t2.itempricermb - t2.cost - t2.refundment - t1.shippingPrice + t2.shippingPricermb +
        t1.commission),2),0) profit
        FROM T_ORDER t1
        left join t_order_item t2
        on t2.amazonorderid = t1.amazonorderid
        WHERE 1=1
        <if test="amazonOrderId !=null and amazonOrderId !=''">
            AND t1.AMAZONORDERID = #{amazonOrderId,jdbcType=VARCHAR}
        </if>
        <if test="salesMan !=null and salesMan !=''">
            AND t1.SALESMAN = #{salesMan,jdbcType=VARCHAR}
        </if>
        <if test="salesCompany !=null and salesCompany !=''">
            AND t1.SALESCOMPANY = #{salesCompany,jdbcType=VARCHAR}
        </if>
        <if test="salesSource !=null and salesSource !=''">
            AND t1.SALESSOURCE = #{salesSource,jdbcType=VARCHAR}
        </if>
        <if test="buyerCounty !=null and buyerCounty !=''">
            AND t1.BUYERCOUNTRY = #{buyerCounty,jdbcType=VARCHAR}
        </if>
        <if test="intlTrackNum !=null and intlTrackNum !=''">
            AND t1.INTLTRACKNUM = #{intlTrackNum,jdbcType=VARCHAR}
        </if>
        <if test="transportCompany !=null and transportCompany !=''">
            AND t1.TRANSPORTCOMPANY = #{transportCompany,jdbcType=VARCHAR}
        </if>
        <if test="localStatus !=null and localStatus !=''">
            AND t1.LOCALSTATUS = #{localStatus,jdbcType=VARCHAR}
        </if>
        <if test="logmin !=null and logmin != ''">
            AND t1.PURCHASEDATE <![CDATA[>=]]> #{logmin,jdbcType=VARCHAR}
        </if>
        <if test="logmax !=null and logmax != ''">
            AND t1.PURCHASEDATE  <![CDATA[<=]]> #{logmax,jdbcType=VARCHAR}
        </if>
        <if test="sku !=null and sku != ''">
            AND t2.SELLERSKU LIKE '%${sku}%'
        </if>
        <if test="trackNum !=null and trackNum != ''">
            AND t2.TRACKNUM LIKE '%${trackNum}%'
        </if>
    </select>
    <delete id="delOrder" parameterType="java.lang.String">
        DELETE FROM T_ORDER
        WHERE AMAZONORDERID = #{amazonOrderId,jdbcType=VARCHAR}
    </delete>
</mapper>